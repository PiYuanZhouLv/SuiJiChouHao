# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Setting.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow, setting, open_about, open_super, save_setting):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(400, 200)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(f"{'ui' if __name__ != '__main__' else '.'}/img/setting.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 20, 151, 21))
        self.label.setObjectName("label")
        self.max_range = QtWidgets.QSpinBox(self.centralwidget)
        self.max_range.setGeometry(QtCore.QRect(150, 20, 41, 21))
        self.max_range.setAlignment(QtCore.Qt.AlignCenter)
        self.max_range.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.max_range.setMinimum(2)
        self.max_range.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.max_range.setProperty("value", 65)
        self.max_range.setObjectName("max_range")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 50, 41, 21))
        self.label_2.setObjectName("label_2")
        self.close_animation = QtWidgets.QPushButton(self.centralwidget)
        self.close_animation.setGeometry(QtCore.QRect(90, 50, 31, 21))
        self.close_animation.setStyleSheet("background-color: rgb(157, 157, 157);")
        self.close_animation.setObjectName("close_animation")
        self.open_animation = QtWidgets.QPushButton(self.centralwidget)
        self.open_animation.setGeometry(QtCore.QRect(60, 50, 31, 21))
        self.open_animation.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.open_animation.setObjectName("open_animation")
        self.about = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.about.setEnabled(True)
        self.about.setGeometry(QtCore.QRect(10, 110, 210, 35))
        self.about.setObjectName("about")
        self.super_setting = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.super_setting.setEnabled(True)
        self.super_setting.setGeometry(QtCore.QRect(10, 150, 210, 35))
        self.super_setting.setObjectName("super_setting")
        self.super_setting.setEnabled(False)
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(90, 80, 181, 22))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(10, 80, 81, 21))
        self.label_3.setObjectName("label_3")
        MainWindow.setCentralWidget(self.centralwidget)

        self.setting = setting
        self.save_setting = save_setting
        def max(*args):
            setting['max'] = self.max_range.value()
            left = list(range(1, int(setting['max']) + 1))
            for i in setting['out']:
                if i in left:
                    left.remove(i)
            setting['left'] = left
            self.save_setting(setting)
        self.max_range.valueChanged.connect(max)
        def open_animation(*args):
            setting['animation'] = "Open"
            self.save_setting(setting)
            self.open_animation.setStyleSheet("background-color: rgb(85, 255, 127);")
            self.close_animation.setStyleSheet("background-color: rgb(157, 157, 157);")
        self.open_animation.clicked.connect(open_animation)
        def close_animation(*args):
            setting['animation'] = "Close"
            self.save_setting(setting)
            self.open_animation.setStyleSheet("background-color: rgb(157, 157, 157);")
            self.close_animation.setStyleSheet("background-color: rgb(255, 0, 127);")
        self.close_animation.clicked.connect(close_animation)
        def window(*args):
            ow = setting['window']
            setting['window'] = str(self.comboBox.currentIndex())
            self.save_setting(setting)
            w = setting['window']
            if (ow in "123" and w == "0") or (ow == "0" and w in "123"):
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.Warning, "提示", "置顶或取消置顶窗口需要重新打开程序才可实现", QtWidgets.QMessageBox.Ok).exec_()
        self.comboBox.currentIndexChanged.connect(window)

        self.about.clicked.connect(lambda *args: open_about(MainWindow))

        # self.super_setting.clicked.connect(lambda *args: open_super(MainWindow))

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def setting_to_ui(self):
        self.max_range.setProperty("value", int(self.setting['max']))
        if self.setting['animation'] == "Open":
            self.open_animation.setStyleSheet("background-color: rgb(85, 255, 127);")
            self.close_animation.setStyleSheet("background-color: rgb(157, 157, 157);")
        else:
            self.open_animation.setStyleSheet("background-color: rgb(157, 157, 157);")
            self.close_animation.setStyleSheet("background-color: rgb(255, 0, 127);")
        self.comboBox.setCurrentIndex(int(self.setting['window']))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "设置"))
        self.label.setText(_translate("MainWindow", "抽取号码范围: 1-"))
        self.label_2.setText(_translate("MainWindow", "动画:"))
        self.close_animation.setText(_translate("MainWindow", "关闭"))
        self.open_animation.setText(_translate("MainWindow", "开启"))
        self.about.setText(_translate("MainWindow", "关于..."))
        self.super_setting.setText(_translate("MainWindow", "高级设置(暂不支持)"))
        self.comboBox.setCurrentText(_translate("MainWindow", "置顶并智能半透明"))
        self.comboBox.setItemText(0, _translate("MainWindow", "普通窗口"))
        self.comboBox.setItemText(1, _translate("MainWindow", "置顶窗口"))
        self.comboBox.setItemText(2, _translate("MainWindow", "置顶并半透明"))
        self.comboBox.setItemText(3, _translate("MainWindow", "置顶并智能半透明"))
        self.label_3.setText(_translate("MainWindow", "窗口模式:"))

if __name__ == '__main__':
    import sys
    app = QtWidgets.QApplication(sys.argv)
    mw = QtWidgets.QMainWindow()
    about = Ui_MainWindow()
    about.setupUi(mw, {
        "max": "65",
        "animation": "Open",
        "window": "3",
        "pwd-md5": hashlib.md5('000000'.encode('utf-8')).hexdigest(),
        "put-back": "2",
        "out": [],
        "left": list(range(1, 65+1))
    }, lambda *args: None, lambda *args: None)
    mw.show()
    sys.exit(app.exec_())
