# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import random
import threading
import time

from PyQt5 import QtCore, QtGui, QtWidgets


class MyThread(QtCore.QThread):
    def __init__(self, parent, target):
        self.target = target
        super().__init__(parent)

    def run(self):
        self.target()


class MyMainWindow(QtWidgets.QMainWindow):
    setting = {'window': "3"}
    def enterEvent(self, a0: QtCore.QEvent) -> None:
        if self.setting['window'] != "2":
            self.setWindowOpacity(1)
        super().enterEvent(a0)

    def leaveEvent(self, a0: QtCore.QEvent) -> None:
        if self.setting['window'] in ("2", "3"):
            self.setWindowOpacity(0.3)
        super().leaveEvent(a0)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow, setting, app, open_setting, save_setting):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(400, 200)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.topic = QtWidgets.QLabel(self.centralwidget)
        self.topic.setEnabled(True)
        self.topic.setGeometry(QtCore.QRect(70, 20, 260, 40))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.topic.setFont(font)
        self.topic.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-color: rgb(0, 0, 0);")
        self.topic.setFrameShape(QtWidgets.QFrame.Panel)
        self.topic.setFrameShadow(QtWidgets.QFrame.Raised)
        self.topic.setAlignment(QtCore.Qt.AlignCenter)
        self.topic.setObjectName("topic")
        self.start = QtWidgets.QPushButton(self.centralwidget)
        self.start.setGeometry(QtCore.QRect(90, 140, 221, 40))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.start.setFont(font)
        self.start.setObjectName("start")
        self.number2 = QtWidgets.QLabel(self.centralwidget)
        self.number2.setGeometry(QtCore.QRect(200, 70, 50, 50))
        font = QtGui.QFont()
        font.setPointSize(30)
        self.number2.setFont(font)
        self.number2.setStyleSheet("background-color: rgb(255, 192, 192);")
        self.number2.setFrameShape(QtWidgets.QFrame.Box)
        self.number2.setAlignment(QtCore.Qt.AlignCenter)
        self.number2.setObjectName("number2")
        self.number1 = QtWidgets.QLabel(self.centralwidget)
        self.number1.setGeometry(QtCore.QRect(151, 70, 50, 50))
        font = QtGui.QFont()
        font.setPointSize(30)
        self.number1.setFont(font)
        self.number1.setStyleSheet("background-color: rgb(255, 192, 192);")
        self.number1.setFrameShape(QtWidgets.QFrame.Box)
        self.number1.setAlignment(QtCore.Qt.AlignCenter)
        self.number1.setObjectName("number1")
        self.b_setting = QtWidgets.QPushButton(self.centralwidget)
        self.b_setting.setGeometry(QtCore.QRect(350, 20, 40, 40))
        self.b_setting.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(f"{'ui/' if __name__ != '__main__' else ''}img/setting.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.b_setting.setIcon(icon)
        self.b_setting.setIconSize(QtCore.QSize(40, 40))
        self.b_setting.setObjectName("b_setting")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(120, 60, 160, 71))
        self.frame.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(241, 140, 85, 255), stop:0.5 rgba(246, 123, 40, 255), stop:1 rgba(229, 107, 23, 255));")
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(30, 130, 340, 60))
        self.frame_2.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(255, 218, 130, 255), stop:0.5 rgba(225, 207, 76, 255), stop:1 rgba(229, 199, 84, 255));")
        self.frame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_2.setObjectName("frame_2")
        self.frame_2.raise_()
        self.frame.raise_()
        self.topic.raise_()
        self.start.raise_()
        self.number2.raise_()
        self.number1.raise_()
        self.b_setting.raise_()
        MainWindow.setCentralWidget(self.centralwidget)

        MainWindow.setting = setting
        self.setting = setting
        MainWindow.app = app
        self.app = app
        self.save_setting = save_setting
        if setting['window'] != "0":
            MainWindow.setWindowFlag(QtCore.Qt.WindowStaysOnTopHint)
        if setting['window'] == "2":
            MainWindow.setWindowOpacity(0.3)

        self.start.clicked.connect(lambda *args: MyThread(MainWindow, target=self.random).start())
        self.b_setting.clicked.connect(lambda *args: open_setting(MainWindow, setting))

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def random(self):
        # r = random.randint(1, self.setting['max'])
        # r0 = r // 10
        # r1 = r % 10
        # print(self.setting)
        self.start.setEnabled(False)
        r = random.choice(self.setting['left'])
        r0 = r // 10
        r1 = r % 10
        if self.setting['put-back'] == "0":
            pass
        elif self.setting['put-back'] == "1":
            self.setting['left'].remove(r)
        elif self.setting['put-back'] == "2":
            self.setting['left'].remove(r)
            self.setting['out'].append(r)
            if self.setting['left'] == []:
                self.setting['left'] = self.setting['out'][:]
                self.setting['out'] = []
            self.save_setting(self.setting)
        if self.setting['animation'] == "Open":
            self.topic.setText("这次会是谁呢?")
            self.number1.setText("?")
            self.number2.setText("?")
            self.number1.setStyleSheet("background-color: rgb(255, 192, 192);")
            self.number2.setStyleSheet("background-color: rgb(255, 192, 192);")
            self.app.processEvents()
            time.sleep(0.2)
            t = time.time()
            while True:
                self.number1.setText(str(random.randint(0, 9)))
                self.number2.setText(str(random.randint(0, 9)))
                self.app.processEvents()
                time.sleep(0.01)
                if time.time() >= t + 0.7:
                    break
            self.number1.setText(str(r0))
            self.topic.setText(f"第一位是 {r0}")
            self.number1.setStyleSheet("background-color: rgb(192, 255, 192);")
            t = time.time()
            while True:
                self.number2.setText(str(random.randint(0, 9)))
                self.app.processEvents()
                time.sleep(0.01)
                if time.time() >= t + 0.7:
                    break
            self.number2.setText(str(r1))
            self.topic.setText(f"第二位是 {r1}")
            self.number2.setStyleSheet("background-color: rgb(192, 255, 192);")
            # '''
            time.sleep(0.2)
            self.app.processEvents()
            self.number1.setStyleSheet("background-color: rgb(255, 128, 0);")
            self.app.processEvents()
            self.number2.setStyleSheet("background-color: rgb(255, 128, 0);")
            self.app.processEvents()
            time.sleep(0.2)
            self.app.processEvents()
            self.number1.setStyleSheet("background-color: rgb(255, 255, 0);")
            self.app.processEvents()
            self.number2.setStyleSheet("background-color: rgb(255, 255, 0);")
            self.app.processEvents()
            time.sleep(0.2)
            self.app.processEvents()
            self.number1.setStyleSheet("background-color: rgb(0, 255, 255);")
            self.app.processEvents()
            self.number2.setStyleSheet("background-color: rgb(0, 255, 255);")
            self.app.processEvents()
            time.sleep(0.2)
            # '''
            self.app.processEvents()
            self.number1.setStyleSheet("background-color: rgb(192, 255, 192);")
            self.app.processEvents()
            self.number2.setStyleSheet("background-color: rgb(192, 255, 192);")
            self.app.processEvents()
        else:
            self.number1.setText(str(r0))
            self.number2.setText(str(r1))
            self.number1.setStyleSheet("background-color: rgb(192, 255, 192);")
            self.number2.setStyleSheet("background-color: rgb(192, 255, 192);")
        self.topic.setText(f"恭喜第{r}号被抽到")
        self.start.setEnabled(True)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "随机抽号"))
        self.topic.setText(_translate("MainWindow", "点击下方按钮开始"))
        self.start.setText(_translate("MainWindow", "随机抽号"))
        self.number2.setText(_translate("MainWindow", "?"))
        self.number1.setText(_translate("MainWindow", "?"))

if __name__ == '__main__':
    import sys, hashlib
    app = QtWidgets.QApplication(sys.argv)
    mw = MyMainWindow()
    about = Ui_MainWindow()
    about.setupUi(mw, {
        "max": "65",
        "animation": "Open",
        "window": "3",
        "pwd-md5": hashlib.md5('000000'.encode('utf-8')).hexdigest(),
        "put-back": "2",
        "out": [],
        "left": list(range(1, 65+1))
    }, app, lambda *args: None)
    mw.show()
    sys.exit(app.exec_())
